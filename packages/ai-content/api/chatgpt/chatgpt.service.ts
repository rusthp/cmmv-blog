import { Service, Config } from "@cmmv/core";

@Service()
export class ChatGPTService {
    async generateContent(prompt: string) : Promise<string> {
        const openaiApiKey = Config.get("blog.openaiApiKey");
        const timeout = Config.get("blog.aiTimeout", 90000); // 90 segundos por padrÃ£o

        const controller = new AbortController();
        const timeoutId = setTimeout(() => controller.abort(), timeout);

        try {
            const response = await fetch('https://api.openai.com/v1/chat/completions', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${openaiApiKey || ''}`
                },
                body: JSON.stringify({
                    model: "gpt-4.1-mini",
                    messages: [
                        {
                            role: "user",
                            content: prompt
                        }
                    ],
                    temperature: 0.1,
                    max_tokens: 8000
                }),
                signal: controller.signal
            });

            clearTimeout(timeoutId);

            if (!response.ok) {
                const error = await response.text();
                throw new Error(`Failed to generate AI content: ${response.statusText}`);
            }

            const openaiResponse = await response.json();
            const generatedText = openaiResponse.choices?.[0]?.message?.content;

            if (!generatedText)
                throw new Error('No content generated by ChatGPT');

            return generatedText;
        } catch (error) {
            clearTimeout(timeoutId);
            
            if (error.name === 'AbortError') {
                throw new Error(`ChatGPT AI timeout after ${timeout}ms`);
            }
            
            throw error;
        }
    }
}
